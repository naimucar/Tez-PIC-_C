CCS PCM C Compiler, Version 4.038, 62930               01-May-08 13:10

               Filename: C:\OKUL\TEZ\PÝC C\PROGRAM_7.1\rb4-7_kesmesi.lst

               ROM used: 141 words (2%)
                         Largest free fragment is 2048
               RAM used: 14 (4%) at main() level
                         15 (4%) worst case
               Stack:    2 worst case (0 in main + 2 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   07C
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  BTFSS  0B.3
001A:  GOTO   01D
001B:  BTFSC  0B.0
001C:  GOTO   030
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   27,W
0028:  MOVWF  7B
0029:  MOVF   20,W
002A:  MOVWF  0A
002B:  SWAPF  21,W
002C:  MOVWF  03
002D:  SWAPF  7F,F
002E:  SWAPF  7F,W
002F:  RETFIE
0030:  BCF    0A.3
0031:  BCF    0A.4
0032:  GOTO   048
.................... #include<16f877.h> 
.................... //////// Standard Header file for the PIC16F877 device //////////////// 
.................... #device PIC16F877 
.................... #list 
....................  
.................... #fuses xt,noprotect,nowdt 
.................... #use delay (clock=4000000) 
0033:  MOVLW  28
0034:  MOVWF  04
0035:  BCF    03.7
0036:  MOVF   00,W
0037:  BTFSC  03.2
0038:  GOTO   047
0039:  MOVLW  01
003A:  MOVWF  78
003B:  CLRF   77
003C:  DECFSZ 77,F
003D:  GOTO   03C
003E:  DECFSZ 78,F
003F:  GOTO   03B
0040:  MOVLW  4A
0041:  MOVWF  77
0042:  DECFSZ 77,F
0043:  GOTO   042
0044:  GOTO   045
0045:  DECFSZ 00,F
0046:  GOTO   039
0047:  RETLW  00
.................... #int_rb                      //rb4_7  kesmesini aktif et(RB4,RB5,RB6,RB7)   
.................... void rb4_7_kesme() 
.................... { 
....................        if(input(pin_b4)) 
0048:  BSF    03.5
0049:  BSF    06.4
004A:  BCF    03.5
004B:  BTFSS  06.4
004C:  GOTO   054
....................         
....................      { delay_ms(50);      
004D:  MOVLW  32
004E:  MOVWF  28
004F:  CALL   033
....................        output_high(pin_d0); 
0050:  BSF    03.5
0051:  BCF    08.0
0052:  BCF    03.5
0053:  BSF    08.0
....................                
....................      } 
....................        if(input(pin_b5)) 
0054:  BSF    03.5
0055:  BSF    06.5
0056:  BCF    03.5
0057:  BTFSS  06.5
0058:  GOTO   060
....................      { delay_ms(50); 
0059:  MOVLW  32
005A:  MOVWF  28
005B:  CALL   033
....................        output_high(pin_d1); 
005C:  BSF    03.5
005D:  BCF    08.1
005E:  BCF    03.5
005F:  BSF    08.1
....................      } 
....................        if(input(pin_b6)) 
0060:  BSF    03.5
0061:  BSF    06.6
0062:  BCF    03.5
0063:  BTFSS  06.6
0064:  GOTO   06C
....................      { delay_ms(50); 
0065:  MOVLW  32
0066:  MOVWF  28
0067:  CALL   033
....................        output_high(pin_d2); 
0068:  BSF    03.5
0069:  BCF    08.2
006A:  BCF    03.5
006B:  BSF    08.2
....................      } 
....................        if(input(pin_b7)) 
006C:  BSF    03.5
006D:  BSF    06.7
006E:  BCF    03.5
006F:  BTFSS  06.7
0070:  GOTO   078
....................      { delay_ms(50); 
0071:  MOVLW  32
0072:  MOVWF  28
0073:  CALL   033
....................        output_high(pin_d3);                      
0074:  BSF    03.5
0075:  BCF    08.3
0076:  BCF    03.5
0077:  BSF    08.3
....................      } 
.................... } 
0078:  BCF    0B.0
0079:  BCF    0A.3
007A:  BCF    0A.4
007B:  GOTO   01D
.................... void main() 
.................... { 
007C:  CLRF   04
007D:  BCF    03.7
007E:  MOVLW  1F
007F:  ANDWF  03,F
0080:  BSF    03.5
0081:  BSF    1F.0
0082:  BSF    1F.1
0083:  BSF    1F.2
0084:  BCF    1F.3
....................  
.................... enable_interrupts(int_rb);                 //RB4-7 kesmesini aktif et 
0085:  BCF    03.5
0086:  BSF    03.6
0087:  BSF    0B.3
.................... enable_interrupts(global);                 //tüm kesmelere izin ver  
0088:  MOVLW  C0
0089:  BCF    03.6
008A:  IORWF  0B,F
.................... while(1); 
008B:  GOTO   08B
.................... } 
008C:  SLEEP

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT NOPROTECT BROWNOUT NOLVP NOCPD NOWRT NODEBUG
